name: .NET build & test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]


jobs:

  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: [ '7.x' ]

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET ${{ matrix.dotnet-version }}
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ matrix.dotnet-version }}
    - name: Cashing dependencies and restore from cashe
      uses: actions/cache@v3
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
        restore-keys: |
          ${{ runner.os }}-nuget
    - name: Install dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --configuration Release --no-restore
    - name: Test
      run: dotnet test --no-restore --verbosity normal --logger trx --results-directory "TestResults-${{ matrix.dotnet-version }}" --collect:"XPlat Code Coverage"
    - name: Upload test logs
      uses: actions/upload-artifact@v3
      with:
        name: dotnet-test-results-${{ matrix.dotnet-version }}
        path: TestResults-${{ matrix.dotnet-version }}

  delivery:
    
    needs: build

    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: [ '7.x' ]

    steps:
      - uses: actions/checkout@v3
  
      - name: Login to Yandex Cloud Container Registry
        id: login-cr
        uses: yc-actions/yc-cr-login@v1
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}
  
      - name: Build, tag, and push image to Yandex Cloud Container Registry
        env:
          CR_REGISTRY: crpla4r64c1a9u3kddh9
          CR_REPOSITORY: testapi
          IMAGE_TAG: ${{ github.sha }}
        run: | 
          docker build -f "Test.WebApi/Dockerfile" -t cr.yandex/$CR_REGISTRY/$CR_REPOSITORY:$IMAGE_TAG ./
          docker push cr.yandex/$CR_REGISTRY/$CR_REPOSITORY:$IMAGE_TAG
        


